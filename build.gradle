plugins {
    id 'java-library'
    id 'maven-publish'
    id 'fabric-loom' version '0.6-SNAPSHOT'
}

targetCompatibility = sourceCompatibility = JavaVersion.VERSION_1_8

mod_id = project.mod_id
version = "${project.mod_version}+${project.minecraft_version}"
group = project.maven_group

repositories {
    maven { url "https://maven.shedaniel.me/" }
    maven { url "https://maven.terraformersmc.com/" }
}

dependencies {
    // Minecraft & Mappings
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"

    // Fabric & Fabric API.
    modImplementation "net.fabricmc:fabric-loader:${project.fabric_loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_api_version}"

    // ModMenu
    modImplementation("com.terraformersmc:modmenu:${project.modmenu_version}") {
        exclude(group: "net.fabricmc.fabric-api")
    }

    // Cloth Config (including Auto Config)
    include modApi("me.shedaniel.cloth:cloth-config-fabric:${project.cloth_config_version}") {
        exclude(group: "net.fabricmc.fabric-api")
    }
}

processResources {
    inputs.property "version", project.version
    inputs.property "name", project.name

    filesMatching("fabric.mod.json") {
        expand(
                "version": project.version,
                "minecraft_version": project.minecraft_version,
                "maven_group": project.maven_group,
                "loader_version": project.fabric_loader_version,
                "fabric_api_version": project.fabric_api_version,
                "mod_id": project.mod_id
        )
    }
}

tasks.withType(JavaCompile).configureEach {
    it.options.encoding = "UTF-8"
    def targetVersion = 8
    if (JavaVersion.current().isJava9Compatible()) {
        it.options.release = targetVersion
    }
}

java {
    withSourcesJar()
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.mod_id}" }
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact(remapJar) { builtBy remapJar }
            artifact(sourcesJar) { builtBy remapSourcesJar }
        }
    }

    repositories {
        // mavenLocal()
    }
}
