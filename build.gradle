buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
        mavenCentral()
        jcenter()
        maven {url='https://repo.spongepowered.org/repository/maven-public'}

    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '4.1.+', changing: true
        classpath 'org.spongepowered:mixingradle:0.7-SNAPSHOT'
    }
}
plugins {
    id 'com.matthewprenger.cursegradle' version '1.2.0'
}
apply plugin: 'net.minecraftforge.gradle'
// Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.
apply plugin: 'eclipse'
apply plugin: 'maven-publish'


version = '1.0'
group = 'de.cheaterpaul.fallingleaves' // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = project.archives_base_name

java.toolchain.languageVersion = JavaLanguageVersion.of(8) // Mojang ships Java 8 to end users, so your mod should target Java 8.

ext.mod_version="Test"
ext.type="test"

println('Java: ' + System.getProperty('java.version') + ' JVM: ' + System.getProperty('java.vm.version') + '(' + System.getProperty('java.vendor') + ') Arch: ' + System.getProperty('os.arch'))
minecraft {
    mappings channel: 'official', version: "$project.minecraft_version"
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.

    // accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    // Default run configurations.
    // These can be tweaked, removed, or duplicated as needed.
    runs {
        client {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'
            arg "-mixin.config=fallingleaves.mixins.json"

            mods {
                examplemod {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'
            arg "-mixin.config=fallingleaves.mixins.json"


            mods {
                examplemod {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            args "-mixin.config=fallingleaves.mixins.json", '--mod', project.mod_id , '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                examplemod {
                    source sourceSets.main
                }
            }
        }
    }
}

// Include resources generated by data generators.
sourceSets.main.resources {
    srcDirs += 'src/generated/resources'
    exclude '.cache'
}

dependencies {
    minecraft([
            group: "net.minecraftforge",
            name: "forge",
            version: "${project.minecraft_version}-${project.forge_version}"
    ])
    annotationProcessor 'org.spongepowered:mixin:0.8.2:processor'
}

// Example for how to get properties into the manifest for reading by the runtime..
jar {

    finalizedBy('reobfJar')

    includeEmptyDirs = false

    from sourceSets.main.output.classesDirs
    from sourceSets.main.output.resourcesDir


    manifest {
        attributes([
                "Specification-Title": project.mod_id,
                "Specification-Vendor": "cheaterpaul",
                "Specification-Version": "1", // We are version 1 of ourselves
                "Implementation-Title": project.name,
                "Implementation-Version": "${mod_version}",
                "Implementation-Vendor" :"cheaterpaul",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
                "MixinConfigs": "fallingleaves.mixins.json"
        ])
    }
}

apply from: 'gradle/deploy.gradle'
apply from: 'gradle/versioning.gradle'

apply plugin: 'org.spongepowered.mixin'

mixin {
    add sourceSets.main, "fallingleaves.refmap.json"
}