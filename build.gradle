buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
        mavenCentral()
        maven {url='https://repo.spongepowered.org/repository/maven-public'}

    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1+', changing: true
        classpath group: 'org.spongepowered', name: 'mixingradle', version: '0.7-SNAPSHOT', changing: true
    }
}
plugins {
    id 'com.matthewprenger.cursegradle' version '1.2.0'
}
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'eclipse'
apply plugin: 'org.spongepowered.mixin'
apply from: 'https://raw.githubusercontent.com/SizableShrimp/Forge-Class-Remapper/main/classremapper.gradle'

mixin {
    add sourceSets.main, "fallingleaves.refmap.json"
}

version = '1.0'
group = 'de.cheaterpaul.fallingleaves'
archivesBaseName = project.archives_base_name

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

ext.mod_version="Test"
ext.type="test"

apply from: 'gradle/versioning.gradle'
apply from: 'gradle/artifacts.gradle'
apply from: 'gradle/maven.gradle'
apply from: 'gradle/curse.gradle'

println('Java: ' + System.getProperty('java.version') + ' JVM: ' + System.getProperty('java.vm.version') + '(' + System.getProperty('java.vendor') + ') Arch: ' + System.getProperty('os.arch'))
minecraft {
    mappings channel: 'official', version: "$project.mappings_mc_version"
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.

     accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    // Default run configurations.
    // These can be tweaked, removed, or duplicated as needed.
    runs {
        client {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'
            property 'mixin.debug.export', 'true'
            property 'forge.logging.console.level', 'debug'
            arg "-mixin.config=fallingleaves.mixins.json"

            mods {
                examplemod {
                    source sourceSets.main
                }
            }
        }

        client2 {
            parent runs.client
            taskName 'runClient2'
            args "-mixin.config=fallingleaves.mixins.json", '--username', 'Dev2'
        }

        server {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'
            arg "-mixin.config=fallingleaves.mixins.json"


            mods {
                examplemod {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            args "-mixin.config=fallingleaves.mixins.json", '--mod', project.mod_id , '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                examplemod {
                    source sourceSets.main
                }
            }
        }
    }
}

// Include resources generated by data generators.
sourceSets.main.resources {
    srcDirs += 'src/generated/resources'
    exclude '.cache'
}

repositories {
    maven {
        url "https://www.cursemaven.com"
        content {
            includeGroup "curse.maven"
        }
    }
}


dependencies {
    minecraft([
            group: "net.minecraftforge",
            name: "forge",
            version: "${project.minecraft_version}-${project.forge_version}"
    ])
    if (System.getProperty("idea.sync.active") != "true") {
        annotationProcessor 'org.spongepowered:mixin:0.8.4:processor'
    }
    //Serene Seasons API
    compileOnly fg.deobf("curse.maven:serene-seasons-api-291874:3582838")
    //Serene Seasons Full for testing
//    runtimeOnly fg.deobf("curse.maven:serene-seasons-291874:3582836")
}

// Example for how to get properties into the manifest for reading by the runtime..
jar {
    finalizedBy('reobfJar')

    includeEmptyDirs = false

    from sourceSets.main.output.classesDirs
    from sourceSets.main.output.resourcesDir


    manifest {
        attributes([
                "Specification-Title": project.mod_id,
                "Specification-Vendor": "cheaterpaul",
                "Specification-Version": "1", // We are version 1 of ourselves
                "Implementation-Title": project.name,
                "Implementation-Version": project.mod_version,
                "Implementation-Vendor" :"cheaterpaul",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
                "MixinConfigs": "fallingleaves.mixins.json"
        ])
    }
}

def resourceTargets = ['META-INF/mods.toml', 'pack.mcmeta']
def intoTargets = ["$rootDir/out/production/resources/", "$rootDir/out/production/${project.name}.main/", "$rootDir/bin/main/"]
def replaceProperties = ['version': project.mod_version, 'mcversion': minecraft_version, 'forge_version': forge_version]
processResources {
    inputs.properties replaceProperties
    replaceProperties.put 'project', project

    filesMatching(resourceTargets) {
        expand replaceProperties
    }

    intoTargets.each { target ->
        if (file(target).exists()) {
            copy {
                from(sourceSets.main.resources) {
                    include resourceTargets
                    expand replaceProperties
                }
                into target
            }
        }
    }
    exclude '**/Thumbs.db'

}